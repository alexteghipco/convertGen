function  generateSphere(points,mm,roiName,anatFile,outputDir,FSLDIR)
%Examples: 
% If you want to use GUI: generateSphere([1 2 3],[4 7],{'one'},[],[],[])
% If you want to specify arguments: generateSphere([128 128 128],[3:6],'testROI','/Volumes/mahonPatientData/AlteredBrain/20150623/DTI/fsldata/Fluency02_SM/MPRAGE/fsldata_Fluency02_SM_anat.nii.gz','/Volumes/mahonPatientData/AlteredBrain/Tools/ProcessingToolbox/tmp',[])
% --------------------------------------------------------
%points: 3-column vector of x, y, z. COORDINATES MUST BE IN VOXEL
% (IE NOT MM) SPACE!!!

%mm: 1 row vector with rows corresponding to the *radius* of spheres you want to generate
% around your coordinates. Current functionality supports radius 2-20.
% The mm argument supports multiple radii (e.g. [4 6 8], etc).
% If Radius is larger than 2, spheres are generated by using a gaussian
% kernel with symmetrical intensities following concentric circles from coordinate.
% This method is much quicker than 'traditional' sphere creation in FSL using 
% fslmaths kernel. Also it works with radius > 6mm. 

%roiName: 1-column vector of string(s) populating rows; this vector should match in size to the
% points vector. This will determine name of output sphere, so name it after
% your roi. NAMES MUST NOT REPEAT. If you have 'MTG' for point one and 'MTG'
% for point 2, the sphere for point 2 will overwrite the sphere for point 1.
% NOTE: THE ORDER OF ROI NAMES MUST MATCH POINTS VECTOR.

%anatFile: vector of strings or numbers; If you want to draw spheres on standard
% space, use '1' or '2' as an argument, corresponding to 1mm or
% 2mm space, otherwise please indicate path to your anatomy file(s) that you
% wish to draw on. The script will iterate analysis over each subs anatomy.
% Build your own vector or pick the anatomy files manually using GUI that
% pops up when you run script. 

%outputDir: vector of string(s); folder that you want the script to output 
% files to. Must match in size to anatFile vector (i.e. every anatFile must 
% have unique output directory associated with it or else data will be overwritten).
% You may leave this field blank and use GUI to select directories. NOTE
% THE ORDER OF OUTPUT DIRECTORIES MUST MATCH ANATOMY FILES.

%FSLDIR: string; feed directory to fsl folder as final argument
% (e.g. '/Applications/fsl-4.0.8', etc). If you want your script to
% automatically detect FSL add 'FSLDIR = findFSL' to your main script that
% passes variables on to this script. Otherwise this script will run findFSL
% for you. Note if you call this script from your main script in some loop
% it is more efficient for you to pass on FSLDIR.
%---------------------------------------------------------
% To Do: - fix fmean method for radius < 4
%        - flip input vectors automatically for roiName, outputDir,
%        anatFile, etc
% --------------------------------------------------------
% Alex Teghipco -- ateghipc@u.rochester.edu -- 2015
% --------------------------------------------------------

%%thresh mat below starting with radius of 1
threshMat = [0.00026 0.00025 0.00024 0.00023 0.00032 0.00016 0.00013 0.00011 0.000084 0.000065 0.000048 0.000035 0.000025 0.000017 0.000011 0.0000074 0.0000047 0.0000029 0.0000017 0.000001003];
%0.00018 radius = 5
%%If user hasn't given vector of anatomies to draw spheres on, make them
%%pick their anatomies now

if isempty(anatFile) == 1
    idir = uipickfiles('Prompt','Please pick the subject anatomies that you would like to draw your spheres on...');
    anatFile = idir';
end

%convert number anatomy files to cell
% if isa(anatFile,'double') == 1
%     anatFile = num2cell(anatFile);
% end


%%If outputDir is empty or doesn't match size of anatomy files, make them
%%re-choose outputDirs
 if (isempty(outputDir) == 1) %|| (size(anatFile,1) ~= size(outputDir,1) == 1)
    %choice = questdlg('You have either not indicated an output directory yet, or the size of your output directory does not match the size of your list of anatomical files. Please re-pick your output directories');
    %h = msgbox('You have either not indicated an output directory yet, or the size of your output directory does not match the size of your list of anatomical files. Please re-pick your output directories', 'IM SO CONFUSED!!!','error');
    outputDirCheck = questdlg('You have either not indicated an output directory yet, or the size of your output directory does not match the size of your list of anatomical files. Please re-pick your output directories?','IM SO CONFUSED!!!');
    if strfind(outputDirCheck,'Yes') == 1
        %if strfind(h,'ok')
        odir = uipickfiles('Prompt','Please pick the output directories that you would like to store your spheres in...');
        outputDir = odir';
    end
    %end
 end

if (size(anatFile,1) ~= size(outputDir,1) && size(outputDir,1) == 1)
    for m = 2:size(anatFile,1)
        outputDir{m,1} = outputDir{1,1};
    end
end
 
%make struct if string vars are char. Only happens if gui is not used and cell struct is not indicated
if exist('idir','var') == 0 || exist('odir','var') == 0 
    anatFile = cellstr(anatFile);
    outputDir = cellstr(outputDir);
end
if size(roiName,1) == 1
    roiName=cellstr(roiName);
end

%%set bash variables and start loading bar
h = waitbar(0,'Code monkeys hard at work...');
if isempty(FSLDIR) == 1
    FSLDIR = findFSL;
    waitbar(0,h,['Ugh you forgot to specify FSLDIR argument...looking for your fsl directory']);
end
FSLMATHS=[FSLDIR '/bin/fslmaths'];
setenv('FSLOUTPUTTYPE','NIFTI_GZ');

%%find standard space anatomy files if needed.
for n = 1:size(anatFile,1)
if strcmp(anatFile{n,1},'MNI 2mm') == 1 
  anatFile{n,1} = [FSLDIR '/data/standard/MNI152_T1_2mm_brain.nii.gz'];
end
if strcmp(anatFile{n,1},'MNI 1mm') == 1 
   anatFile{n,1} = [FSLDIR '/data/standard/MNI152_T1_1mm_brain.nii.gz'];
end

%%create output directory if it doesn't exist...only in case user doesn't
%%select through uipickfiles
for o = 1:size(outputDir,1)
    if exist(outputDir{o,1},'file') == 0
        mkdir(outputDir{o,1})
    end
end

%%Check if sizes of args are compatible
if (size(anatFile,1) ~= size(outputDir,1)) == 1
    error('something is funky about your number of anatFile and the number of outputDirs')
end

%%create a copy of the anatomy on which to draw
    for sub = 1:size(outputDir,1)
        anat=[outputDir{sub,1} '/template.nii.gz'];
        copyfile(anatFile{sub,1},anat);
        %% start main loop
        for i = 1:size(points,1)
            x=points(i,1);
            y=points(i,2);
            z=points(i,3);
            
            if exist([outputDir{sub,1} '/' roiName{i,1} '.nii.gz'], 'file') ~= 2
                generatePoint=[FSLMATHS ' ' anat ' -mul 0 -add 1 -roi ' num2str(x) ' 1 ' num2str(y) ' 1 ' num2str(z) ' 1 0 1 ' outputDir{sub,1} '/' roiName{i,1} '.nii.gz -odt float'];
                system(generatePoint);
            end
            
            if exist([outputDir{sub,1} '/' roiName{i,1} '_Radius.nii.gz'], 'file') ~= 2
                sphereTemplate=[FSLMATHS ' ' outputDir{sub,1} '/' roiName{i,1} '.nii.gz -s ' num2str(6) ' ' outputDir{sub,1} '/' roiName{i,1} '_Radius.nii.gz'];
                system(sphereTemplate);
            end
            
            for j = 1:size(mm,2)
                r=mm(1,j);
                waitbar((j*i*sub) / (size(mm,2)*size(points,1)*size(anatFile,1)),h,['Working on subject ' num2str(sub) ', ' roiName{i,1} ', with sphere radius of ' num2str(r)]);
                if r <= 4
                    r2=r*2; %old method thresh is diameter NOT radius. So output ROI is halved.
                    sphereGen=[FSLMATHS ' ' outputDir{sub,1} '/' roiName{i,1} '.nii.gz -kernel sphere ' num2str(r2) ' -fmean ' outputDir{sub,1} '/' roiName{i,1} '_Radius_' num2str(r) '.nii.gz -odt float'];
                    system(sphereGen);
                else
                    thresh = threshMat(r);
                    threshSphere=[FSLMATHS ' ' outputDir{sub,1} '/' roiName{i,1} '_Radius.nii.gz -thr ' num2str(thresh) ' ' outputDir{sub,1} '/' roiName{i,1} '_Radius_' num2str(r) '.nii.gz'];
                    system(threshSphere);
                end
                binSphere=[FSLMATHS ' ' outputDir{sub,1} '/' roiName{i,1} '_Radius_' num2str(r) '.nii.gz -bin ' outputDir{sub,1} '/' roiName{i,1} '_Radius_' num2str(r) '_bin.nii.gz'];
                system(binSphere);
                
            end
        end
    end
    close(h)
end
